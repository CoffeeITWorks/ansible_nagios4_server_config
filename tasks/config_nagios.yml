---
# file: tasks/config_nagios.yml

# Only config for normal operation

- name: Clone configuration directories (Git)
  git:  repo="{{ item.repo }}"
        dest="{{ nagios_config_cfg_dir }}/{{ item.dir }}"
        version="{{ item.version }}"
        update=yes
        force=yes
  with_items: '{{ nagios_config_cfg_dirs_git }}'
  when: nagios_config_cfg_dirs_git
  notify: Reload Nagios

- name: Clone configuration directories (Git)
  git:  repo="{{ item.repo }}"
        dest="{{ nagios_config_cfg_dir }}/{{ item.dir }}"
        version="{{ item.version }}"
        update=yes
        force=yes
        accept_hostkey=yes
        key_file=keys/nagios_key_rsa
  with_items: '{{ nagios_config_cfg_dirs_git_rsa }}'
  when: nagios_config_cfg_dirs_git_rsa
  notify: Reload Nagios

- name: Allow icmp to run with nagios user
  file: 'path={{ nagios_plugins_dir }}/check_icmp mode="u+rws,g+rx,o+rx"'
  notify: Reload Nagios

- name: Configure Generic Nagios stuff
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: 'root'
    group: 'root'
    mode: 0644
  with_items:
    - { src: 'extra-commands.cfg.j2', dest: '{{ nagios_config_cfg_dir }}/extra-commands.cfg' }
    - { src: 'generic-commands.cfg.j2', dest: '{{ nagios_config_cfg_dir }}/generic-commands.cfg' }
    - { src: 'localhost_nagios.cfg.j2', dest: '{{ nagios_config_cfg_dir }}/localhost_nagios.cfg' }
    - { src: 'hostgroups_nagios.cfg.j2', dest: '{{ nagios_config_cfg_dir }}/hostgroups_nagios.cfg' }
    - { src: 'services_nagios.cfg.j2', dest: '{{ nagios_config_cfg_dir }}/services_nagios.cfg' }
    - { src: 'templates.cfg.j2', dest: '{{ nagios_etc }}/objects/templates.cfg' }
  notify: Reload Nagios

- name:  config_nagios | resource.cfg $USER1$
  lineinfile: 
    dest: "{{ nagios_etc }}/resource.cfg" 
    regexp: '{{ item.src }}' 
    line: "{{ item.value }}"
  with_items:
   - src: '^\$USER1\$='
     value: "$USER1$={{ nagios_plugins_dir }}"

- name: Configure Generic Nagios host and service
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: 'root'
    group: 'root'
    mode: 0644
  with_items:
    - { src: 'generic-host_nagios.cfg.j2', dest: '{{ nagios_config_cfg_dir }}/generic-host_nagios.cfg' }  # to be compatible with nagios4_server_pnp4nagios
    - { src: 'generic-service_nagios.cfg.j2', dest: '{{ nagios_config_cfg_dir }}/generic-service_nagios.cfg' } # to be compatible with nagios4_server_pnp4nagios
  notify: Reload Nagios
  when: nagios_config_configure_generic_host_service | bool

- name: Configure Generic Nagios stuff
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: 'root'
    group: 'root'
    mode: 0644
  with_items:
    - { src: 'cgi.cfg.j2', dest: '{{ nagios_etc }}/cgi.cfg' } # Modify permissions and other web options
  notify: Reload Apache

- name: create commands_core dir
  file: 'path={{ nagios_config_cfg_dir }}/commands_core owner=root group=root mode=755 state=directory'

- name: config_nagios | copy commands to commands_core
  copy: src={{ item }} dest="{{ nagios_config_cfg_dir }}/commands_core" owner="{{ apache_user }}" mode=655
  with_fileglob:
  - "commands/*"
  notify: Reload Nagios

- name: config_nagios | template commands to commands_core
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: 'root'
    group: 'root'
    mode: 0644
  with_items:
    - { src: 'commands/commands_nsclientv04.cfg.j2', dest: '{{ nagios_config_cfg_dir }}/commands_core/commands_nsclientv04.cfg' }  # to be compatible with nagios4_server_pnp4nagios
    - { src: 'commands/commands_check_nrpe_nsclient.cfg.j2', dest: '{{ nagios_config_cfg_dir }}/commands_core/commands_check_nrpe_nsclient.cfg' } # to be compatible with nagios4_server_pnp4nagios
  notify: Reload Nagios
