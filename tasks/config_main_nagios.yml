---
# file: tasks/config_main_nagios.yml

- name: config_main_nagios | ensure conf.d exists
  file: path="{{ nagios_config_cfg_dir }}" state='directory' mode='775' owner='nagios' group='nagios'

- name: config_main_nagios | ensure conf.d/nagios-plugins does not exists
  file: path="{{ nagios_config_cfg_dir }}/nagios-plugins" state='absent'

# copy commands for debian based distro
- name: config_main_nagios | ensure conf.d/plugins exists
  file: path="{{ nagios_config_cfg_dir }}/plugins" state='directory' mode='775' owner='nagios' group='nagios'
  
- name: config_main_nagios | copy plugins-cfg
  copy: src="{{ item }}" dest="{{ nagios_config_cfg_dir }}/plugins" owner=nagios group=nagios mode=655
  with_fileglob:
  - "nagios-plugins-cfg/*"

- name:  config_main_nagios | link nagios4 config
  file: src="{{ item.src }}" dest="{{ item.dest }}" state=link
  with_items:
    - { src: '{{ nagios_etc }}', dest: '/etc/nagios4' }  
  
- name:  config_main_nagios | lineinfile - configure nagios.cfg 
  lineinfile: dest="{{ nagios_config_file }}" regexp='{{ item.src }}' line="{{ item.value }}"
  with_items:
  - { src: "^status_update_interval=" , value: "status_update_interval={{ nagios_config_status_update_interval }}" }
  - { src: "^nagios_user=" , value: "nagios_user={{ nagios_config_nagios_user }}" }
  - { src: "^nagios_group=" , value: "nagios_group={{ nagios_config_nagios_group }}" }
  - { src: "^check_external_commands=" , value: "check_external_commands={{ nagios_config_check_external_commands }}" }
  - { src: "^use_syslog=" , value: "use_syslog={{ nagios_config_use_syslog }}" }
  - { src: "^log_notifications=" , value: "log_notifications={{ nagios_config_log_notifications }}" }
  - { src: "^log_initial_states=" , value: "log_initial_states={{ nagios_config_log_initial_states }}" }
  - { src: "^service_inter_check_delay_method=" , value: "service_inter_check_delay_method={{ nagios_config_service_inter_check_delay_method }}" }
  - { src: "^max_concurrent_checks=" , value: "max_concurrent_checks={{ nagios_config_max_concurrent_checks }}" }
  - { src: "^retain_state_information=" , value: "retain_state_information={{ nagios_config_retain_state_information }}" }
  - { src: "^use_retained_scheduling_info=" , value: "use_retained_scheduling_info={{ nagios_config_use_retained_scheduling_info }}" }
  - { src: "^interval_length=" , value: "interval_length={{ nagios_config_interval_length }}" }
  - { src: "^check_for_updates=" , value: "check_for_updates={{ nagios_config_check_for_updates }}" }
  - { src: "^enable_notifications=" , value: "enable_notifications={{ nagios_config_enable_notifications }}" }
  - { src: "^process_performance_data=" , value: "process_performance_data={{ nagios_config_process_performance_data }}" }
  - { src: "^enable_flap_detection=" , value: "enable_flap_detection={{ nagios_config_enable_flap_detection }}" }
  - { src: "^use_regexp_matching=" , value: "use_regexp_matching={{ nagios_config_use_regexp_matching }}" }
  - { src: "^admin_email=" , value: "admin_email={{ nagios_config_admin_email }}" }
  - { src: "^admin_pager=" , value: "admin_pager={{ nagios_config_admin_pager }}" }
  - { src: "^use_large_installation_tweaks=" , value: "use_large_installation_tweaks={{ nagios_config_use_large_installation_tweaks }}" }
  - { src: "^enable_environment_macros=" , value: "enable_environment_macros={{ nagios_config_enable_environment_macros }}" }
  - { src: "^free_child_process_memory=" , value: "free_child_process_memory={{ nagios_config_free_child_process_memory }}" }
  - { src: "^log_rotation_method=" , value: "log_rotation_method={{ nagios_config_log_rotation_method }}" }
  - src: "^cfg_dir="
    value: "cfg_dir={{ nagios_config_cfg_dir }}"
  - src: "^cached_host_check_horizon="
    value: "cached_host_check_horizon={{ nagios_cached_host_check_horizon }}"
  - src: "^cached_service_check_horizon="
    value: "cached_service_check_horizon={{ nagios_cached_service_check_horizon }}"
  - src: "^check_service_freshness="
    value: "check_service_freshness={{ nagios_check_service_freshness }}"
  - src: "^allow_empty_hostgroup_assignment="
    value: "allow_empty_hostgroup_assignment={{ nagios_allow_empty_hostgroup_assignment }}"
  - src: "^service_freshness_check_interval="
    value: "service_freshness_check_interval={{ nagios_service_freshness_check_interval }}"
  - src: "^host_freshness_check_interval="
    value: "host_freshness_check_interval={{ nagios_host_freshness_check_interval }}"    
  notify: Restart Nagios
  tags:
    - nagios_server_main_config

- name:  config_main_nagios | lineinfile - configure nagios.cfg perf options 
  lineinfile: dest="{{ nagios_config_file }}" regexp='^{{ item.key }}=' line="{{ item.key }}={{ item.value }}"
  with_items: "{{ nagios_config_perf_options }}"

- name:  config_main_nagios | Install Plugins
  copy: 'src=plugins/ dest=/usr/lib/nagios/plugins/ owner=root group=root mode=0755'

- name:  config_main_nagios | lineinfile - configure sudoers to allow check_linux_stats.pl permissions
  lineinfile: 
    path: "{{ sudoers_file }}" 
    regexp: "{{ item.src }}"
    line: "{{ item.value }}"
    validate: '/usr/sbin/visudo -cf %s'
  with_items:
    - { src: "^nagios ALL=" , value: "nagios ALL=(root) NOPASSWD:/usr/lib/nagios/plugins/check_linux_stats.pl" }
